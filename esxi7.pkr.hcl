
variable "disk_adapter_type" {
  type    = string
  default = "scsi"
}

variable "disk_size" {
  type    = string
  default = "8192"
}

variable "guest_os_type" {
  type    = string
  default = "vmkernel65"
}

variable "headless" {
  type    = string
  default = "false"
}

variable "http_directory" {
  type    = string
  default = "http"
}

variable "iso_checksum" {
  type    = string
  default = "3a7f8f9ec46c9f3cb3057553b64fbd74251485bf59cc4606b1f5b9450c33ec55"
}

variable "iso_checksum_type" {
  type    = string
  default = "sha256"
}

variable "iso_url" {
  type    = string
  default = "/Users/mark.west/Downloads/VMware-VMvisor-Installer-7.0U3c-19193900.x86_64.iso"
}

variable "memory" {
  type    = string
  default = "10240"
}

variable "output_directory" {
  type    = string
  default = "/Users/mark.west/output-vmware-iso"
}

variable "remove_interfaces" {
  type    = string
  default = "true"
}

variable "save_to_dir" {
  type    = string
  default = "/Users/mark.west/"
}

variable "save_to_filename" {
  type    = string
  default = "/Users/mark.west/esxi7.vmwarevm"
}

variable "shutdown_command" {
  type    = string
  default = "esxcli system maintenanceMode set -e true -t 0; esxcli system shutdown poweroff -d 10 -r \"Packer Shutdown\"; esxcli system maintenanceMode set -e false -t 0"
}

variable "ssh_password" {
  type    = string
  default = "VMw@re1"
}

variable "ssh_username" {
  type    = string
  default = "root"
}

variable "vcpu" {
  type    = string
  default = "2"
}

variable "version" {
  type    = string
  default = "10"
}

variable "vm_name" {
  type    = string
  default = "esxi72_x64"
}

variable "vmx_file" {
  type    = string
  default = "'/Users/mark.west/github/outside/packer-vmware-iso/esxi7.vmx'"
}

source "vmware-iso" "autogenerated_1" {
  
  boot_command            = [
    "<esc><esc><esc><shift>O",
    "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs><bs> ",
    "kernelopt=runweasel ",
    "bootstate=0 ",
    "title=https://cloud.hashicorp.com/products/packer ",
    "timeout=5 ",
    "prefix= ",
    "ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ks.cfg<enter>",
     ]
     boot_wait = "3s"
  cpus                    = "${var.vcpu}"
  communicator = "none"
  disk_adapter_type       = "${var.disk_adapter_type}"
  disk_size               = "${var.disk_size}"
  disk_type_id            = 0
  guest_os_type           = "${var.guest_os_type}"
  headless                = "${var.headless}"
  http_directory          = "${var.http_directory}"
  iso_checksum            = "${var.iso_checksum}"
  # iso_checksum_type       = "${var.iso_checksum_type}"
  iso_url                 = "${var.iso_url}"
  memory                  = "${var.memory}"
  network                 = "vmnet8"
  network_adapter_type    = "vmxnet3"
  network_name            = "vmnet8"
  output_directory        = "${var.output_directory}"
  pause_before_connecting = "10m"
  # shutdown_command        = "esxcli system maintenanceMode set -e true -t 0; esxcli system shutdown poweroff -d 10 -r \"Packer Shutdown\"; esxcli system maintenanceMode set -e false -t 0"
  # ssh_password            = "${var.ssh_password}"
  # ssh_username            = "${var.ssh_username}"
  ssh_wait_timeout        = "60m"
  # vnc_over_websocket = true
  insecure_connection = true
  vm_name                 = "${var.vm_name}"
  vmx_data = {
                "firmware": "efi"
                "vhv.enable": "TRUE"
                "ethernet1.present": "TRUE"
                "ethernet1.connectionType": "custom"
                "ethernet1.virtualDev": "vmxnet3"
                "ethernet1.wakeOnPcktRcv": "FALSE"
                "ethernet1.addressType": "generated"
                "ethernet1.linkStatePropagation.enable": "TRUE"
                "ethernet1.vnet": "vmnet2"
                "ethernet1.bsdName": "en1"
                "ethernet1.displayName": "vmnet2 ESX1"
                "ethernet2.present": "TRUE"
                "ethernet2.connectionType": "custom"
                "ethernet2.virtualDev": "vmxnet3"
                "ethernet2.wakeOnPcktRcv": "FALSE"
                "ethernet2.addressType": "generated"
                "ethernet2.linkStatePropagation.enable": "TRUE"
                "ethernet2.vnet": "vmnet8"
                "ethernet2.bsdName": "en2"
                "ethernet2.displayName": "vmnet8 ESX2"
                "scsi0.virtualDev": "pvscsi",
                "disk.enableUUID": "TRUE"
  }
  vmx_remove_ethernet_interfaces = "${var.remove_interfaces}"
}

build {

  # provisioner "shell-local" {
  #   inline = [
  # #     # sed -i 's/oldstring/newstring/'  /path/to/vmx 
  # #     # "sed -i -e '/ethernet0.vnet = \"\"/s/.*/ethernet0.vnet = \"vmnet8\"/'  /Users/mark.west/output-vmware-iso/esxi72_x64.vmx",
  # #     # "sed -i 's/ethernet0.vnet = \"\"/ethernet0.vnet = \"vmnet8\"/'  /Users/mark.west/output-vmware-iso/esxi72_x64.vmx"
  # "sed -i -e '/ethernet0.vnet/d' /Users/mark.west/output-vmware-iso/esxi72_x64.vmx"
  #     ]
  # }

  sources = ["source.vmware-iso.autogenerated_1"]

  post-processor "artifice" {
    files = [ source.name ]
    # type =  "shell"
  }


  post-processor "compress" {
    # files = [var.vmx_file]
    # type =  "shell"
  }

  # post-processor "shell-local" {
  #   inline = ["'/Applications/VMware Fusion.app/Contents/Library/VMware OVF Tool/ovftool'"]
  # }

  # post-processor "shell-local" {
  #   inline = ["'/Applications/VMware Fusion.app/Contents/Library/VMware OVF Tool/ovftool'"]
    
  # }
  # post-processor "manifest" {
  #   output     = "${var.save_to_dir}/packer-manifest.json"
  #   strip_path = true
  # }
}
